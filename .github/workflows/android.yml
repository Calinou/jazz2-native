name: 'Android'

on:
  push:
    branches:
      - master
  pull_request:
    types: [ opened, synchronize ]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
        - BuildType: Release
          DisplayName: arm

        - BuildType: Release
          DisplayName: x86-64

    runs-on: 'ubuntu-latest'

    steps:
    - name: 'Checkout Code'
      uses: actions/checkout@v3

    - name: 'Create Build Environment'
      run: |
        sudo apt-get update -y
        sudo apt-get install -y cmake curl g++ libgl1-mesa-dev libopenmpt-dev

    - name: 'Configure CMake'
      run: |
        case "${{ matrix.DisplayName }}" in
          arm ) architecture="arm64-v8a;armeabi-v7a"
                universalApk="ON" ;;
          x86-64 ) architecture="x86_64"
                   universalApk="OFF" ;;
          * ) exit 1 ;;
        esac
        
        cmake -B ./_build/ -D CMAKE_BUILD_TYPE=${{ matrix.BuildType }} -D NCINE_LINKTIME_OPTIMIZATION=ON -D NCINE_BUILD_ANDROID=ON -D NCINE_ASSEMBLE_APK=ON -D NCINE_UNIVERSAL_APK="$universalApk" -D NCINE_NDK_ARCHITECTURES="$architecture"

    - name: 'Build'
      run: |
        make -j $(nproc) -C ./_build/
        export JAVA_HOME=$JAVA_HOME_11_X64
        cd ./_build/android/
        gradle assemble${{ matrix.BuildType }}

    - name: 'Create Package'
      run: |
        case "${{ matrix.DisplayName }}" in
          arm ) filename="app-universal-release-unsigned.apk" ;;
          x86-64 ) filename="app-x86_64-release-unsigned.apk" ;;
          * ) exit 1 ;;
        esac
      
        echo '${{ secrets.ANDROID_KEYSTORE_FILE }}' | base64 --decode > ./_keystore.jks
        mkdir ./_package/
        $ANDROID_HOME/build-tools/29.0.3/zipalign -p 4 "./_build/android/app/build/outputs/apk/release/$filename" "./_package/jazz2.apk"
        $ANDROID_HOME/build-tools/29.0.3/apksigner sign --ks-key-alias Main --ks "./_keystore.jks" --ks-pass "pass:${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" --key-pass "pass:${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" "./_package/jazz2.apk"
        cp -f -r ./Content/ ./_package/Content/
        
    - name: 'Upload Package'
      uses: actions/upload-artifact@v3
      with:
        name: JazzÂ²_android_${{ matrix.DisplayName }}
        path: ./_package/
        